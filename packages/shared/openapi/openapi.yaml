openapi: 3.0.0
info:
  title: Lingo Legends API
  version: v1
tags: []
paths:
  /words:
    get:
      operationId: Words_getWords
      parameters:
        - name: ids
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: random
          in: query
          required: false
          schema:
            type: boolean
          explode: false
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
        - name: pos
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PosCode'
          explode: false
        - name: lexFileNum
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/LexFileNum'
          explode: false
        - name: lang
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: lemma
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: exact
          in: query
          required: false
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordsResponse'
components:
  schemas:
    LexFileNum:
      type: number
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
    PointerSymbol:
      type: string
      enum:
        - '@'
        - '@i'
        - '~'
        - ~i
        - '#m'
        - '#s'
        - '#p'
        - '%m'
        - '%s'
        - '%p'
        - =
        - +
        - '!'
        - '&'
        - <
        - '*'
        - '>'
        - ^
        - $
        - ;c
        - ;r
        - ;u
        - -c
        - -r
        - -u
        - \\
    PosCode:
      type: string
      enum:
        - 'n'
        - v
        - a
        - s
        - r
    Versions:
      type: string
      enum:
        - v1
    Word:
      type: object
      required:
        - id
        - lemma
        - gloss
        - posCode
        - lexFileNum
        - relations
      properties:
        id:
          type: integer
          format: int32
        lemma:
          type: string
        gloss:
          type: string
        posCode:
          $ref: '#/components/schemas/PosCode'
        lexFileNum:
          $ref: '#/components/schemas/LexFileNum'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/WordRelation'
    WordRelation:
      type: object
      required:
        - id
        - lemma
        - pointerSymbol
        - sourceTarget
      properties:
        id:
          type: integer
          format: int32
        lemma:
          type: string
        pointerSymbol:
          $ref: '#/components/schemas/PointerSymbol'
        sourceTarget:
          type: string
    WordsResponse:
      type: object
      required:
        - words
        - count
      properties:
        words:
          type: array
          items:
            $ref: '#/components/schemas/Word'
        count:
          type: integer
          format: int32
servers:
  - url: http://localhost:3000
    description: Development server
    variables: {}
